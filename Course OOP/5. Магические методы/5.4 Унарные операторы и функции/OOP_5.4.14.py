import copy
import numpy

'''–ö–ª–∞—Å—Å Matrix üå∂Ô∏èüå∂Ô∏è
–†–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–ª–∞—Å—Å Matrix, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π –¥–≤—É–º–µ—Ä–Ω—É—é –º–∞—Ç—Ä–∏—Ü—É. –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ç—Ä–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ:

rows ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –≤ –º–∞—Ç—Ä–∏—Ü–µ
cols ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –º–∞—Ç—Ä–∏—Ü–µ
value ‚Äî –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Ç—Ä–∏—Ü—ã, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ 0
–≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ Matrix –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –¥–≤–∞ –∞—Ç—Ä–∏–±—É—Ç–∞:

rows ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –≤ –º–∞—Ç—Ä–∏—Ü–µ
cols ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –º–∞—Ç—Ä–∏—Ü–µ
–ö–ª–∞—Å—Å Matrix –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –¥–≤–∞ –º–µ—Ç–æ–¥–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞:

get_value() ‚Äî –º–µ—Ç–æ–¥, –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —Å—Ç—Ä–æ–∫—É row –∏ —Å—Ç–æ–ª–±–µ—Ü col –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Ç—Ä–∏—Ü—ã —Å–æ —Å—Ç—Ä–æ–∫–æ–π row –∏ —Å—Ç–æ–ª–±—Ü–æ–º col
set_value() ‚Äî –º–µ—Ç–æ–¥, –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —Å—Ç—Ä–æ–∫—É row, —Å—Ç–æ–ª–±–µ—Ü col –∏ –∑–Ω–∞—á–µ–Ω–∏–µ value –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—â–∏–π –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∑–Ω–∞—á–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Ç—Ä–∏—Ü—ã —Å–æ —Å—Ç—Ä–æ–∫–æ–π row –∏ —Å—Ç–æ–ª–±—Ü–æ–º col –∑–Ω–∞—á–µ–Ω–∏–µ value
–≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ Matrix –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ —Ñ–æ—Ä–º–∞–ª—å–Ω–æ–µ —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ:

Matrix(<–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –≤ –º–∞—Ç—Ä–∏—Ü–µ>, <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –º–∞—Ç—Ä–∏—Ü–µ>)
–ù–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–º —Å—Ç—Ä–æ–∫–æ–≤—ã–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ–º –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å—Ç—Ä–æ–∫–∞, –≤ –∫–æ—Ç–æ—Ä–æ–π –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω—ã –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Ç—Ä–∏—Ü—ã. –≠–ª–µ–º–µ–Ω—Ç—ã —Å—Ç—Ä–æ–∫–∏ –º–∞—Ç—Ä–∏—Ü—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –ø—Ä–æ–±–µ–ª–æ–º, —Å—Ç—Ä–æ–∫–∏ –º–∞—Ç—Ä–∏—Ü—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–∞–∑–¥–µ–ª–µ–Ω—ã —Å–∏–º–≤–æ–ª–æ–º –ø–µ—Ä–µ–Ω–æ—Å–∞ —Å—Ç—Ä–æ–∫–∏ \n. –ù–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ Matrix(2, 3) –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–º —Å—Ç—Ä–æ–∫–æ–≤—ã–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ–º –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å—Ç—Ä–æ–∫–∞ 0 0 0\n0 0 0, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏ –≤—ã–≤–æ–¥–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º:

0 0 0
0 0 0
–¢–∞–∫–∂–µ —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ Matrix –¥–æ–ª–∂–µ–Ω –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —É–Ω–∞—Ä–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã +, - –∏ ~:

—Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —É–Ω–∞—Ä–Ω–æ–≥–æ + –¥–æ–ª–∂–µ–Ω —è–≤–ª—è—Ç—å—Å—è –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ Matrix c –∏—Å—Ö–æ–¥–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –∏ —Å –∏—Å—Ö–æ–¥–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
—Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —É–Ω–∞—Ä–Ω–æ–≥–æ - –¥–æ–ª–∂–µ–Ω —è–≤–ª—è—Ç—å—Å—è –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ Matrix c –∏—Å—Ö–æ–¥–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –∏ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏, –≤–∑—è—Ç—ã–º–∏ —Å –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–º –∑–Ω–∞–∫–æ–º
—Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —É–Ω–∞—Ä–Ω–æ–≥–æ ~ –¥–æ–ª–∂–µ–Ω —è–≤–ª—è—Ç—å—Å—è –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ Matrix, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π —Ç—Ä–∞–Ω—Å–ø–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—É—é –º–∞—Ç—Ä–∏—Ü—É
–ù–∞–∫–æ–Ω–µ—Ü, –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞ Matrix –≤ —Ñ—É–Ω–∫—Ü–∏—é round() –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ Matrix c –∏—Å—Ö–æ–¥–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –∏ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏, –æ–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–º–∏ —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ round(). –í–æ –≤—Ä–µ–º—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ —Ñ—É–Ω–∫—Ü–∏—é round() –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤ –∫–∞—á–µ—Å—Ç–≤–µ –≤—Ç–æ—Ä–æ–≥–æ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —É–∫–∞–∑–∞—Ç—å —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ, –æ–ø—Ä–µ–¥–µ–ª—è—é—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π –ø—Ä–∏ –æ–∫—Ä—É–≥–ª–µ–Ω–∏–∏.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ò–Ω–¥–µ–∫—Å–∞—Ü–∏—è —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –º–∞—Ç—Ä–∏—Ü–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –Ω—É–ª—è.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –ù–∏–∫–∞–∫–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –∫–∞—Å–∞—Ç–µ–ª—å–Ω–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–ª–∞—Å—Å–∞ Matrix –Ω–µ—Ç, –æ–Ω–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 4. –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ —Å—Å—ã–ª–∫–∞–º:
https://github.com/python-generation/OOP/tree/main/Module_5/Module_5.4/Module_5.4.14
'''


class Matrix:
    def __init__(self, rows, cols, value=0):
        self.rows = rows
        self.cols = cols
        self.values = value
        self.matrix = [[self.values] * self.cols for j in range(self.rows)]

    def get_value(self, row, col):
        return self.matrix[row][col]

    def set_value(self, row, col, value):
        self.matrix[row][col] = value

    def __str__(self):
        return '{}'.format("\n".join([" ".join(map(str, i)) for i in self.matrix]))

    def __repr__(self):
        return '{}({}, {})'.format(self.__class__.__name__, self.rows, self.cols)

    def __neg__(self):
        matr = Matrix(self.rows, self.cols)
        for row in range(matrix.rows):
            for col in range(matrix.cols):
                matr.set_value(row, col, -self.get_value(row, col))
        return matr

    def __pos__(self):
        matr = Matrix(self.rows, self.cols)
        for row in range(matrix.rows):
            for col in range(matrix.cols):
                matr.set_value(row, col, self.get_value(row, col))
        return matr

    def __invert__(self): # ~
        matr = Matrix(self.cols, self.rows)
        for row in range(self.cols):
            for col in range(self.rows):
                matr.set_value(row, col, self.get_value(col, row))
        return matr

    def __round__(self, n=None):
        r1 = Matrix(self.rows, self.cols, self.values)
        k1 = copy.deepcopy(self.matrix)
        r1.matrix = k1
        if n is None:
            return '{}'.format("\n".join([" ".join(map(str, i)) for i in r1.matrix]))
        return '{}'.format("\n".join([" ".join(map(lambda x: str(round(x, n)), i)) for i in r1.matrix]))


# INPUT DATA:

# TEST_1:
print(Matrix(2, 3))

# TEST_2:
matrix = Matrix(2, 3, 1)

print(+matrix)
print()
print(-matrix)

# TEST_3:
matrix = Matrix(2, 3, 1)

print(matrix)
print()
print(~matrix)

# TEST_4:
matrix = Matrix(2, 3)

print(matrix.get_value(0, 0))
print(matrix.get_value(1, 1))

matrix.set_value(0, 0, 100)
matrix.set_value(1, 1, 200)

print(matrix.get_value(0, 0))
print(matrix.get_value(1, 1))

# TEST_5:
matrix = Matrix(4, 2)

counter = 1
for row in range(4):
    for col in range(2):
        matrix.set_value(row, col, counter)
        counter += 1

print(matrix)
print()
print(~matrix)

# TEST_6:
matrix1 = Matrix(4, 2)
matrix2 = Matrix(10, 20, value=6)

print(repr(matrix1))
print(repr(matrix2))

# TEST_7:
matrix = Matrix(5, 10)

floats = [[7125.900408, 633.354471, -9237.8575119, 2865.3825158, 5509.2609336, 8712.260779, 8317.523947, 2512.4736075,
           -3087.5496014, 3861.68814],
          [-7852.451832, 376.465911, -8142.7867326, -6921.8371407, 3735.7516227, -3322.8019034, 7115.79968,
           -8949.9313078, -7032.4347679, -5217.8236385],
          [-7817.9657992, -4319.716346, -1038.6294521, -2959.8970273, -9263.5713405, 9358.607686, 1429.6576196,
           -9484.68116, 639.6343972, 3444.9938213],
          [-2844.2405153, -2078.2441427, 6812.1367017, 112.3910618, -1116.8662449, 5042.7026276, -5981.6930342,
           4370.9173164, -8851.7648474, 8990.6896422],
          [90.8102435, 5256.6137481, -9743.8477321, -131.5501688, -5920.5976176, 4963.8336619, -4907.3622526,
           8531.2015615, -244.3630074, 3421.8817151]]

for r in range(5):
    for c in range(10):
        matrix.set_value(r, c, floats[r][c])

print(matrix)
print()
print(~matrix)
print()
print(round(matrix, 2))
print()
print(-matrix)

# TEST_8:
matrix = Matrix(2, 3, 1)

round_matrix = round(matrix)
plus_matrix = +matrix
minus_matrix = -matrix
invert_matrix = ~matrix

print(round_matrix is matrix)
print(plus_matrix is matrix)
print(minus_matrix is matrix)
print(invert_matrix is matrix)

# TEST_9:
matrix = Matrix(2, 3, 1)

plus_matrix = +matrix
minus_matrix = -matrix
invert_matrix = ~matrix

print(plus_matrix.cols, plus_matrix.rows)
print(minus_matrix.cols, minus_matrix.rows)
print(invert_matrix.cols, invert_matrix.rows)